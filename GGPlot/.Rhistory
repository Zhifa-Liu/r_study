# 3.reshape pkg
# melt and cast
library(reshape2)
d = read.table(header=TRUE,sep=" ",
text = "ID TIME X1 X2
1 1 5 6
1 2 4 5
2 1 6 1
2 2 2 4"
)
melt(d, id=c("ID", "TIME"))
d = read.table(header=TRUE,sep=" ",
text = "
ID TIME X1 X2
1 1 5 6
1 2 4 5
2 1 6 1
2 2 2 4
"
)
melt(d, id=c("ID", "TIME"))
cast(m, ID+TIME~variable)
dcast(m, ID+TIME~variable)
m = melt(d, id=c("ID", "TIME"))
cast(m, ID+TIME~variable)
dcast(m, ID+TIME~variable)
dcast(m, ID~variable, mean)
dt.m2 <- melt(dt, measure=list(c("dob_child1", "dob_child1", "dob_child1"),c("gender_child1", "gender_child2", "gender_child2")), value.name=c("dob", "gender"))
colA = paste("dob_child", 1:3, sep = "")
class(colA)
dt.m2 <- melt(dt, measure=list(c("dob_child1", "dob_child2", "dob_child3"),c("gender_child1", "gender_child2", "gender_child2")), value.name=c("dob", "gender"))
dt.m2
cols1 = c("dob_child1", "dob_child2", "dob_child3")
cols2 = c("gender_child1", "gender_child2", "gender_child2")
dt.m2 <- melt(dt, measure=list(cols1, cols2), value.name=c("dob", "gender"))
cols2 = paste("gender_child", 1:3, sep="")
dt.m2 <- melt(dt, measure=list(cols1, cols2), value.name = .("dob", "gender"))
dt.m2 <- melt(dt, measure=list(cols1, cols2), value.name=.("dob", "gender"))
dt.m2 <- melt(dt, measure=list(cols1, cols2), value.name=list("dob", "gender"))
cols1 = paste("dob_child", 1:3, sep="")# c("dob_child1", "dob_child2", "dob_child3")
cols2 = paste("gender_child", 1:3, sep="")
dt.m2 <- melt(dt, measure=list(cols1, cols2), value.name=c("dob", "gender"))
dt.m2 <- melt(dt, measure=list(cols1, cols2))
dt.m2
library(data.table)
### data.table对reshape2包的melt、dcast的增强
dt <- fread("D:/Course/数据科学导论与R语言/R语言/melt_enhanced.csv")
cols1 = c("dob_child1", "dob_child2", "dob_child3")
cols2 = paste("gender_child", 1:3, sep="")
dt.m2 <- melt(dt, measure=list(cols1, cols2))
dt.m2
dt.m2 <- melt(dt, measure=list(cols1, cols2), value.name=c("dob", "gender"))
dt.m2
# patterns
dt.m2 = melt(dt, measure=patterns("^dob", "^gender"), value.name=c("dob", "gender")) # C实现，效率高、节省内存
dt.m2
### 如何对两组不同类型的属性分别melt成两列呢？(Previous way)
dt <- fread("D:/Course/数据科学导论与R语言/R语言/melt_enhanced.csv")
dt$dob_child1=as.character.Date(dt$dob_child1)
dt$dob_child2=as.character.Date(dt$dob_child2)
dt$dob_child3=as.character.Date(dt$dob_child3) # Date and other data type
dt.m1 = melt(dt, id.vars=c("family_id", "age_mother"), measure.vars=3:8)
dt.m1[, c("variable", "child"):=tstrsplit(variable, "_", fixed=TRUE)]
dt.m1
dt.c1 = dcast(dt.m1, family_id+age_mother+child~variable, value.var="value")
dt.c1
## 增强的dcast
dt.c2 = dcast(dt.m2, family_id+age_mother~variable, value.var=c("dob","gender"))
dt.c2
### 创建绘图对象
# ggplot():参数1：数据；参数2：图形属性映射
p <- ggplot(diamonds, aes(carat, price, colour=cut))
print(p) # 图形对象在加上图层之前无法显示
library(ggplot2)
### 创建绘图对象
# ggplot():参数1：数据；参数2：图形属性映射
p <- ggplot(diamonds, aes(carat, price, colour=cut))
print(p) # 图形对象在加上图层之前无法显示
### 图层对象
# 图层对象可以存储到变量，且可用于不同数据
lay <- geom_smooth(method="lm", se=F, colour=alpha("steelblue",0.5), size=2)
qplot(sleep_rem, sleep_total, data=msleep)+lay
p <- ggplot(df, aes(x, y, label=label))+xlab(NULL)+ylab(NULL)
### 基本图形类型
df <- data.frame(x=c(3, 1, 5), y=c(2,4,6), label=c("a", "b", "c"))
p <- ggplot(df, aes(x, y, label=label))+xlab(NULL)+ylab(NULL)
p+geom_point()+labs(title="geom_point")
p+geom_bar(stat="identity")+labs(title="geom_bar")
p+geom_line()+labs(title="geom_line") # 线条图
p+geom_area()+labs(title="geom_area") # 面积图
p+geom_path()+labs(title="geom_path")
p+geom_text()+labs(title="geom_text") # 带标签的散点图
p+geom_tile()+labs(title="geom_tile")
p+geom_ploygon()+labs(title="geom_ploygon") # 多边形图
p+geom_polygon()+labs(title="geom_polygon") # 多边形图
# 分布的跨组比较
depth_dist <- ggplot(diamonds, aes(depth))+xlim(58, 68)
depth_dist+geom_histogram(aes(y=..density..), binwidth=0.1)+facet_grid(cut~.)
depth_dist+freqpoly(aes(y=..density.., colour=cut), binwidth=0.1)
depth_dist+freqpoly(aes(y=..density.., colour=cut), binwidth=0.1)
depth_dist+frequency(aes(y=..density.., colour=cut), binwidth=0.1)
depth_dist+geom_histogram(aes(fill=cut), binwidth=0.1)
depth_dist+geom_histogram(aes(fill=cut), binwidth=0.1, position="fill")
depth_dist+geom_histogram(aes(colour=cut), binwidth=0.1, position="fill")
qplot(carat, depth, data=diamonds, geom="boxplot", group = round_any(carat, 0.1, floor), xlim=c(0, 3))
library(plyr)
qplot(carat, depth, data=diamonds, geom="boxplot", group = round_any(carat, 0.1, floor), xlim=c(0, 3))
round_any(2)
round_any(diamonds$carat, 0.1)
library(ggplot2)
p <- qplot(sleep_total,sleep_cycle,data=msleep,colour=vore)
p
p+scale_colour_hue()
p
p+scale_colour_hue()
mpg
mpgsub <- subset(mpg,cyl!=5 & drv %in% c("4","f"))
ggplot(data=mpgsub,aes(cty,hwy))+geom_point()+facet_grid(.~cyl)
qplot(cty,hwy,data=mpgsub)+facet_grid(drv~cyl)
movies
movies
# 封装分面
library(ggplot2movies)
library(plyr)
movies
