# 条形图
install.packages("vcd")
Arthritis
library(vcd)
# table() 使用N个类别型变量(因子)创建一个N维列联表(频数表)
effect_counts <- table(Arthritis$Improved)
barplot(effect_counts,main="Title",xlab="Improvement",ylab="Frequency",horiz=TRUE) # 水平条形
Arthritis
counts <- table(Arthritis$Improved,Arthritis$Treatment)
barplot(counts,xlab="Treatment",ylab="Frequency",col=c("red","yellow","green"),legend=(rownames(counts)))
barplot(effect_counts,main="Title",xlab="Improvement",ylab="Frequency",col=c("red","yellow","green"),horiz=TRUE) # 水平条形
barplot(counts,xlab="Treatment",ylab="Frequency",col=c("red","yellow","green"),legend=(rownames(counts)),beside=TRUE)
# 直方图
hist(mtcars$mpg)
# 直方图
hist(mtcars$mpg,breaks=6,col="blue",xlab="Miles Per Gallon",ylab="Frequency")
# 直方图
hist(mtcars$mpg,breaks=6,col="lightblue",xlab="Miles Per Gallon",ylab="Frequency")
# 核密度图
plot(density(mtcars$mpg))
# 箱线图/盒状图
boxplot(mpg~cyl,data=mtcars,main="Title",xlab="Number of Cylinders",ylab="Miles Per Gallon")
### 中级绘图
# 1.散点图
plot(wt,mpg)
### 中级绘图
# 1.散点图
attach(mtcars)
plot(wt,mpg)
counts
state.region
state.x77
state
states = data.frame(state.region,state.x77)
means <- aggregate(states$Illiteracy,by=list(state.region),FUN=mean)
means
means <- aggregate(states$Illiteracy,by=list(state.region),FUN=mean)
means <- means[order(means$x),]
barplot(means$x,names.arg=means$Group.1,main="Mean llliteracy Rate")
slices <- c(1,2,3,4)
lbs <- c("A","B","C","D")
pie(slices,labels=lbs,main="Pie")
install.packages("plotrix")
library(plotrix)
pie3D(slices,labels=lbs,explode=0.1)
# 3.扇形图(Fan plot)
fan.plot(slice,labels=lbs)
# 3.扇形图(Fan plot)
fan.plot(slice,labels=lbs)
# 3.扇形图(Fan plot)
fan.plot(slices,labels=lbs)
hist(mtcars$mpg,freq=FALSE,breaks=9,col="lightblue",xlab="Miles Per Gallon")
lines(density(mtcars$mpg),col="skyblue",lwd=5)
lines(density(mtcars$mpg),col="skyblue",lwd=1)
lines(density(mtcars$mpg),col="skyblue",lwd=1)
lines(density(mtcars$mpg),col="skyblue",lwd=1)
hist(mtcars$mpg,freq=FALSE,breaks=9,col="lightblue",xlab="Miles Per Gallon")
lines(density(mtcars$mpg),col="skyblue",lwd=1)
hist(mtcars$mpg,freq=FALSE,breaks=9,col="lightblue",xlab="Miles Per Gallon")
lines(density(mtcars$mpg),col="skyblue",lwd=2)
x <- mtcars[order(mtcars$mpg),]
is.numeric(x$cyl)
x$cyl <- factor(x$cyl)
is.numeric(x$cyl)
x <- mtcars[order(mtcars$mpg),]
x$cyl <- factor(x$cyl)
x$color[x$cyl==4] <- "red"
x$color[x$cyl==6] <- "lightblue"
x$color[x$cyl==8] <- "green"
dotchart(x$mpg,labels=row.name(x),cex=.8,pch=20,groups=x$cyl,color=x$color,xlab="Miles Per Gallon")
dotchart(x$mpg,labels=row.names(x),cex=.8,pch=20,groups=x$cyl,color=x$color,xlab="Miles Per Gallon")
dotchart(x$mpg,labels=row.names(x),cex=.8,pch=10,groups=x$cyl,color=x$color,xlab="Miles Per Gallon")
dotchart(x$mpg,labels=row.names(x),cex=.8,pch=50,groups=x$cyl,color=x$color,xlab="Miles Per Gallon")
dotchart(x$mpg,labels=row.names(x),cex=.8,pch=90,groups=x$cyl,color=x$color,xlab="Miles Per Gallon")
dotchart(x$mpg,labels=row.names(x),cex=.8,pch='o',groups=x$cyl,color=x$color,xlab="Miles Per Gallon")
dotchart(x$mpg,labels=row.names(x),cex=.8,pch='.',groups=x$cyl,color=x$color,xlab="Miles Per Gallon")
dotchart(x$mpg,labels=row.names(x),cex=.8,pch='o',groups=x$cyl,color=x$color,xlab="Miles Per Gallon")
dotchart(x$mpg,labels=row.names(x),cex=.8,pch='o',groups=x$cyl,gcolor="black",color=x$color,xlab="Miles Per Gallon")
dotchart(x$mpg,labels=row.names(x),cex=.8,pch='o',groups=x$cyl,gcolor="black",color=x$color,xlab="Miles Per Gallon")
dotchart(x$mpg,labels=row.names(x),cex=.8,pch='o',groups=x$cyl,gcolor="black",color=x$color,xlab="Miles Per Gallon")
dotchart(x$mpg,labels=row.names(x),cex=.8,pch='o',groups=x$cyl,gcolor="red",color=x$color,xlab="Miles Per Gallon")
attach(mtcars)
plot(wt,mpg)
abline(lm(mpg~wt),col="lightblue",lwd=2,lty=2)
# install.packages("car")
library(car)
# 散点图矩阵
pair(~mpg+disp+drat+wt,data=mtcars)
# 散点图矩阵
pairs(~mpg+disp+drat+wt,data=mtcars)
is.list(means$Group.1)
scatterplotMatrix(~mpg+disp+drat+wt,data=mtcars,spread=TRUE,smoother.args=list(lty=2))
warnings
scatterplotMatrix(~mpg+disp+drat+wt,data=mtcars,spread=FALSE,smoother.args=list(lty=2))
scatterplotMatrix(~mpg+disp+drat+wt,data=mtcars,spread=FALSE,smoother.args=list(lty=2))
scatterplotMatrix(~mpg+disp+drat+wt,data=mtcars,smoother.args=list(lty=2))
scatterplotMatrix(~mpg+disp+drat+wt,data=mtcars,spread=FALSE,smoother.args=list(lty=2))
library(car)
scatterplotMatrix(~mpg+disp+drat+wt,data=mtcars,spread=FALSE,smoother.args=list(lty=2))
library(car)
scatterplotMatrix(~mpg+disp+drat+wt,data=mtcars,spread=FALSE,smoother.args=list(lty=2))
with(d,plot(x,y,pch=19))
set.seed(12)
n <- 10000
d_1 <- matrix(rnorm(n,mean=0,sd=.5),ncol=2)
d_2 <- matrix(rnorm(n,mean=3,sd=2),ncol=2)
d = rbing(d_1,d_2)
d <- as.data.frame(d)
names(d) <- c("x","y")
with(d,plot(x,y,pch=19))
set.seed(12)
n <- 10000
d_1 <- matrix(rnorm(n,mean=0,sd=.5),ncol=2)
d_2 <- matrix(rnorm(n,mean=3,sd=2),ncol=2)
d = rbing(d_1,d_2)
d <- as.data.frame(d)
names(d) <- c("x","y")
with(d,plot(x,y,pch=19))
set.seed(12)
n <- 10000
d_1 <- matrix(rnorm(n,mean=0,sd=.5),ncol=2)
d_2 <- matrix(rnorm(n,mean=3,sd=2),ncol=2)
d = rbind(d_1,d_2)
d <- as.data.frame(d)
names(d) <- c("x","y")
with(d,plot(x,y,pch=19))
x
x
with(d,smoothScatter(d$x,d$y))
# 1.4高密度散点图:hexbin()
# install.packages("hexbin")
library(hexbin)
# 1.4高密度散点图:hexbin()
install.packages("hexbin")
install.packages("hexbin")
with(d,{
bin <- hexbin(d$x,d$y,xbins=50)
plot(bin)
})
bin <- hexbin(d$x,d$y,xbins=100)
with(d,{
bin <- hexbin(d$x,d$y,xbins=100)
plot(bin)
})
symbols(wt,mpg,circle=r,inches=.1,fg="white",bg="lightblue")
# 2.气泡图
# 除三维散点图可以展示三个定量变量间的关系，还可以使用二维散点图，加上用电的大小来代表第三个变量的值
r <- sqrt(disp/pi) # disp 发动机排量
symbols(wt,mpg,circle=r,inches=.1,fg="white",bg="lightblue")
symbols(wt,mpg,circle=r,inches=.3,fg="white",bg="lightblue")
symbols(wt,mpg,circle=r,inches=.2,fg="white",bg="lightblue")
text(wt,mpg,rownames(mtcars),cex=0.5)
text(wt,mpg,rownames(mtcars),cex=0.2)
text(wt,mpg,rownames(mtcars),cex=0.9)
symbols(wt,mpg,circle=r,inches=.4,fg="white",bg="lightblue")
text(wt,mpg,rownames(mtcars),cex=0.2)
text(wt,mpg,rownames(mtcars),cex=0.5)
Orange
# 3.折线图
t = subset(Orange,Tree==1)
plot(t$age,t$circumference,type='b')
plot(t$age,t$circumference,type='c')
plot(t$age,t$circumference,type='o')
Orange$Tree <- as.numeric(Orange$Tree)
ntrees = max(Orange$Tree)
xrange = range(Orange$age)
yrange = range(Orange$circumference)
plot(xrange,yrange)
plot(xrange,yrange,type="n")
plotchar <- seq(18,18+ntrees,1)
plotchar
Orange$Tree <- as.numeric(Orange$Tree)
ntrees = max(Orange$Tree)
xrange = range(Orange$age)
yrange = range(Orange$circumference)
plot(xrange,yrange,type="n")
colors <- rainbow(ntrees)
linestyle <- c(1:ntrees)
plotchar <- seq(18,18+ntrees,1)
for (i in 1:ntrees){
tree <- subset(Orange,Tree==i)
lines(tree$age,tree$circumferenc,type='o',lwd=1,lty=linetype[i],col=colors[i],pch=plotchar[i])
}
linetype <- c(1:ntrees)
xrange
yrange
Orange$Tree <- as.numeric(Orange$Tree)
ntrees = max(Orange$Tree)
xrange = range(Orange$age)
yrange = range(Orange$circumference)
plot(xrange,yrange,type="n")
colors <- rainbow(ntrees)
linetype <- c(1:ntrees)
plotchar <- seq(18,18+ntrees,1)
for (i in 1:ntrees){
tree <- subset(Orange,Tree==i)
lines(tree$age,tree$circumferenc,type='o',lwd=1,lty=linetype[i],col=colors[i],pch=plotchar[i])
}
legend(xrange[1],yrange[2],1:ntrees,cex=0.6,col=colors,pch=plotchar,lty=linetype,title="Tree")
legend(xrange[1],yrange[2],1:ntrees,cex=0.9,col=colors,pch=plotchar,lty=linetype,title="Tree")
legend(xrange[1],yrange[2],1:ntrees,cex=1,col=colors,pch=plotchar,lty=linetype,title="Tree")
# 4.相关图(Correlograms)
install.packages("corrgram")
corrgram(mtcars,order=TRUE,lower.panel=panel.shade,upper.panel=panel.pie,text.panel=panel.txt)
library(corrgram)
corrgram(mtcars,order=TRUE,lower.panel=panel.shade,upper.panel=panel.pie,text.panel=panel.txt)
ftable(Titanic)
library(vcd)
mosaic(Titanic,shade=TRUE,legend=TRUE)
